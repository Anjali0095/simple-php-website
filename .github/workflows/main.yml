name: Deploy PHP Application to Ubuntu EC2

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'  # Replace with your desired PHP version
          extensions: mbstring, mysqli  # Add any PHP extensions you need

      - name: Install SSH client
        run: sudo apt-get install -y openssh-client

      - name: Add SSH key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
          AWS_EC2_HOST: ${{ secrets.AWS_EC2_HOST }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key

          # Check if AWS_EC2_HOST is set and not empty
          if [ -z "$AWS_EC2_HOST" ]; then
            echo "AWS_EC2_HOST is empty or not set"
            exit 1
          fi
          
          ssh-keyscan -H $AWS_EC2_HOST >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        env:
          AWS_EC2_USER: ${{ secrets.AWS_EC2_USER }}
          AWS_EC2_HOST: ${{ secrets.AWS_EC2_HOST }}
        run: |
          ssh -i ~/.ssh/deploy_key $AWS_EC2_USER@$AWS_EC2_HOST << 'EOF'
          # Ensure the deployment directory exists
          mkdir -p /var/www/html/my-php-app || exit
          
          # Change to the deployment directory
          cd /var/www/html/my-php-app || exit

          # Fix ownership and permissions for the deployment directory
          sudo chown -R $AWS_EC2_USER:$AWS_EC2_USER /var/www/html/my-php-app || exit
          sudo chmod -R u+rwX /var/www/html/my-php-app || exit

          # Pull the latest code (this assumes the directory is already a git repo)
          git pull origin master || exit

          # Install PHP dependencies if using Composer
          if [ -f composer.json ]; then
              composer install --no-interaction --prefer-dist || exit
          fi

          # Restart Apache to apply changes
          sudo systemctl restart apache2
          EOF
